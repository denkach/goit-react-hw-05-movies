{"version":3,"file":"static/js/95.65a2cce8.chunk.js","mappings":"mPAGaA,EAAQC,EAAAA,GAAAA,IAAH,kFAMLC,EAAQD,EAAAA,GAAAA,GAAH,qDAKLE,EAAWF,EAAAA,GAAAA,GAAH,6CAIRG,GAAiBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,+M,2BCuC3B,EAjDkB,WAAO,IAAD,IACdK,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAmBC,EAAAA,EAAAA,UAAQ,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAA7CC,GAAP,eACA,GAAkCH,EAAAA,EAAAA,UAAS,MAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAA5BM,GAAT,eAUA,IARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBZ,GAASa,MACvB,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,YAAxC,OACET,EAAa,CAAEK,SAAAA,EAAUC,WAAAA,EAAYC,MAAAA,EAAOC,OAAAA,EAAQC,YAAAA,GADtD,KAGFC,EAAAA,EAAAA,IAAgBnB,GAASa,MAAK,gBAAGO,EAAH,EAAGA,QAAH,OAAiBV,EAAgBU,EAAjC,GAC/B,GAAE,CAACpB,IAECQ,EAAL,CAIA,IAAQQ,EAAqDR,EAArDQ,MAAOE,EAA8CV,EAA9CU,YAAaH,EAAiCP,EAAjCO,WAAYD,EAAqBN,EAArBM,SAElCO,EAFuDb,EAAXS,OAExBK,KAAI,YAC5B,OAD0C,EAAXC,IAEhC,IAED,OACE,UAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAlB,WACE,SAAC,KAAD,CAASC,GAAIpB,EAAb,6BACA,UAACiB,EAAA,EAAD,CAAKI,QAAQ,OAAOF,GAAG,OAAvB,WACE,SAAChC,EAAD,CAAOmC,IATJ,kCASeX,EAAaY,IAAKtB,EAAUQ,SAC9C,UAACQ,EAAA,EAAD,CAAKO,GAAG,OAAR,WACE,SAACnC,EAAD,UAAQoB,KACR,wCAAgBD,MAChB,SAAClB,EAAD,wBACA,uBAAIiB,KACJ,SAACjB,EAAD,sBACA,uBAAIwB,EAAWW,KAAK,eAGxB,UAACR,EAAA,EAAD,CAAKE,GAAG,OAAR,WACE,SAAC5B,EAAD,CAAgB6B,GAAG,OAAnB,oBACA,SAAC7B,EAAD,CAAgB6B,GAAG,UAAnB,yBAEF,SAAC,KAAD,MA1BH,CA6BF,C","sources":["pages/AboutFilm/AboutFilm.styled.jsx","pages/AboutFilm/AboutFilm.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  display: block;\n  width: 400px;\n  max-height: 600px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Subtitle = styled.h3`\n  font-weight: 700;\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 18px;\n\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n\n  &:hover {\n    color: #2196f3;\n  }\n`;\n","import { getMovieDetails, getMovieReviews } from 'services/filmsAPI';\nimport { Box } from 'components/Box';\nimport { Image, Title, Subtitle, AdditionalLink } from './AboutFilm.styled';\n\nimport { useState, useEffect } from 'react';\n\nimport { useParams, NavLink, useLocation, Outlet } from 'react-router-dom';\n\nconst AboutFilm = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [pathBack] = useState(location.state?.from ?? '/');\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [, setMovieReviews] = useState('');\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(\n      ({ overview, popularity, title, genres, poster_path }) =>\n        setMovieInfo({ overview, popularity, title, genres, poster_path })\n    );\n    getMovieReviews(movieId).then(({ results }) => setMovieReviews(results));\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const { title, poster_path, popularity, overview, genres } = movieInfo;\n  const url = `https://image.tmdb.org/t/p/w500`;\n  const genresName = genres.map(({ name }) => {\n    return name;\n  });\n\n  return (\n    <Box as=\"main\" mt=\"24px\">\n      <NavLink to={pathBack}>Back to movies</NavLink>\n      <Box display=\"flex\" mt=\"12px\">\n        <Image src={url + poster_path} alt={movieInfo.title} />\n        <Box ml=\"24px\">\n          <Title>{title}</Title>\n          <p>User score: {popularity}</p>\n          <Subtitle>Overview</Subtitle>\n          <p>{overview}</p>\n          <Subtitle>Genres</Subtitle>\n          <p>{genresName.join(', ')}</p>\n        </Box>\n      </Box>\n      <Box mt=\"12px\">\n        <AdditionalLink to=\"cast\">Casts</AdditionalLink>\n        <AdditionalLink to=\"reviews\">Reviews</AdditionalLink>\n      </Box>\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default AboutFilm;\n"],"names":["Image","styled","Title","Subtitle","AdditionalLink","NavLink","movieId","useParams","location","useLocation","useState","state","from","pathBack","movieInfo","setMovieInfo","setMovieReviews","useEffect","getMovieDetails","then","overview","popularity","title","genres","poster_path","getMovieReviews","results","genresName","map","name","Box","as","mt","to","display","src","alt","ml","join"],"sourceRoot":""}